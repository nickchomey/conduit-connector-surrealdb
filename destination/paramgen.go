// Code generated by paramgen. DO NOT EDIT.
// Source: github.com/ConduitIO/conduit-commons/tree/main/paramgen

package destination

import (
	"github.com/conduitio/conduit-commons/config"
)

const (
	ConfigDatabase     = "database"
	ConfigDeleteOldKey = "delete_old_key"
	ConfigNamespace    = "namespace"
	ConfigPassword     = "password"
	ConfigScope        = "scope"
	ConfigUrl          = "url"
	ConfigUsername     = "username"
)

func (Config) Parameters() map[string]config.Parameter {
	return map[string]config.Parameter{
		ConfigDatabase: {
			Default:     "",
			Description: "Database is the database name for the SurrealDB server.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigDeleteOldKey: {
			Default:     "false",
			Description: "We will always set an \"id\" field. If the incoming primary key is not \"id\", then \"id\" will get its value. DeleteOldKey is a flag to delete the old key and value from payload. Set to false if you want to keep the old key and value in the payload.",
			Type:        config.ParameterTypeBool,
			Validations: []config.Validation{},
		},
		ConfigNamespace: {
			Default:     "",
			Description: "Namespace is the namespace for the SurrealDB server.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigPassword: {
			Default:     "",
			Description: "Password is the password for the SurrealDB server.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigScope: {
			Default:     "",
			Description: "Scope is the scope for the SurrealDB server.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigUrl: {
			Default:     "",
			Description: "URL is the connection string for the SurrealDB server.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
		ConfigUsername: {
			Default:     "",
			Description: "Username is the username for the SurrealDB server.",
			Type:        config.ParameterTypeString,
			Validations: []config.Validation{
				config.ValidationRequired{},
			},
		},
	}
}
